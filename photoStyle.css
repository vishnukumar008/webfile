* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

:root {
    --n: 10;
    --duration: 50s;
    --card-tiltZ: 12deg;
    --card-tiltX: 3deg;
    --card-max-radius: 28em;
    --card-radius: min(40vw, var(--card-max-radius));
    --card-omtrek: calc(2 * pi * var(--card-radius));
    --item-size-bruto: calc(var(--card-omtrek) / var(--n));
    --item-spacing: .5;
    --item-size-netto: calc(var(--item-size-bruto) / (1 + var(--item-spacing)));
    --item-tiltX: 12deg;
}

section {
    position: relative;
    height: 100vh;
    display: grid;
    place-items: center;
    background-image: linear-gradient(black, midnightblue);
}

ul {
    list-style-type: none;
    display: grid;
    perspective: 100vh;
    transform-style: preserve-3d;
}

li {
    --delay: calc(var(--duration) / var(--n) * var(--i) - var(--duration));
    grid-area: 1/1;
    width: var(--item-size-netto);
    transform: rotateZ(var(--card-tiltZ)) rotateX(var(--card-tiltX)) rotateY(var(--item-rotateY)) translateZ(var(--card-radius)) rotateX(var(--item-tiltX));
    animation: item-rotateY var(--duration) var(--delay) infinite linear;
}

@keyframes item-rotateY {
    100% {
        --item-rotateY: 360deg;
    }
}

@property --item-rotateY {
    syntax: "<angle>";
    inherits: true;
    initial-value: 0deg;
}

img {
    width: 200px;
    height: 200px;
    mask: linear-gradient(45deg, transparent, red);
    border-radius: 20px;
}

audio {
    width: 20%;
    position: absolute;
    bottom: 0;
    opacity: 0.1;
}

audio::-webkit-media-controls-panel {
    background-color: rgb(0, 0, 255);
}

@media (max-width:600px) {
    section {
        width: 100%;
        height: 100vh;
    }

    img {
        width: 100px;
        height: 100px;
        border-radius: 20px;
    }

    li {
        transform: rotateZ(93deg) rotateX(0deg) rotateY(var(--item-rotateY)) translateZ(13em) rotateX(var(--item-tiltX));
    }

    audio {
        width: 20%;
    }
}
